components:
  schemas:
    Artist:
      type: object
      properties:
        id:
          type: string
        labelId:
          type: string
        name:
          type: string
        country:
          type: string
          enum: [Too long, ask for the enum to an Admin]
      example:
        id: 63322dda8f9d0fe821b20b21
        labelId: 632f42f74cca87148e193abb
        name: fake artist
        country: Germany
    Band Member:
      type: object
      properties:
        id:
          type: string
        artistId:
          type: string
        personId:
          type: string
      example:
        id: 634094a0ff28121b15f08b98
        artistId: 63322dda8f9d0fe821b20b21
        personId: 632f4301b7018f1243894fed
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user
    Genre:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
          id: 632f42f228914eff60e84388
          name: rock
    Labels:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        country:
          type: string
          enum: [Too long, ask for the enum to an Admin]
      example:
          id: 632f42f74cca87148e193abb
          name: Sony
          country: Japan
    Person:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        dateOfBirth:
          type: date
        gender:
          type: string
          enum: ['Female, Male, Other']
        alive:
          type: boolean
        nationality:
          type: string
          enum: [Too long, ask for the enum to an Admin]
      example:
          id: 632f4301b7018f1243894fed
          name: Kanye Omari West
          country: United States
          alive: true
          dateOfBirth: '1977-06-8T00:00:00.002Z'
    Record:
      type: object
      properties:
        id:
          type: string
        artistId:
          type: string
        labelId:
          type: string
        name:
          type: string
        releaseYear:
          type: number
        country:
          type: string
          enum: [Too long, ask for the enum to an Admin]
        duration:
          type: string
        language:
          type: string
        numberOfTracks:
          type: number 
        type:
          type: string
          enum: ['LP', 'EP', 'Single']   
      example:
          id: 635854f8c2c2391300fa85bf
          artistId: 632f4301b7018f1243894fed
          labelId: 632f42f74cca87148e193abb
          name: Yield
          releaseYear: 1998
          country: United States
          duration: 48:37
          language: English
          numberOfTracks: 13
    RecordGenre:
      type: object
      properties:
        id:
          type: string
        recordId:
          type: string
        genreId:
          type: string
        example:
          id: 6375490d72497a50f1f3de58
          recordId: 635854f8c2c2391300fa85bf
          genreId: 632f42f228914eff60e84388
    UserAddress:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        streetName:
          type: string
        buildingNumber:
          type: string
        apartmentNumber:
          type: string
        complement:
          type: string
        postalCode:
          type: string
          format: Brazilian postal code
        city:
          type: string
        state:
          type: string
          enum: [AC,AL,AP,AM,BA,CE,DF,ES,GO,MA,MT,MS,MG,PA,PB,PR,PE,PI,RJ,RN,RS,RO,RR,SC,SP,SE,TO]
        country:
          type: string
          enum: [Too long, ask for the enum to an Admin]
      example:
          id: 632f452ccd92aa388041e11f
          userId: 5ebac534954b54139806c112
          streetName: 'fake street'
          buildingNumber: '10'
          apartmentNumber: '201'
          complement: '2nd block'
          postalCode: '22222-222'
          city: 'Rio de Janeiro'
          state: 'RJ'
          country: Brazil
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal Server Error


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
